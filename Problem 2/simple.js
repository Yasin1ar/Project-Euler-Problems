// Problem 2 : https://projecteuler.net/problem=2

/*
    Each new term in the Fibonacci sequence is generated by adding the previous two terms:

    1: Calculate fibonacci consider values do not exceed four million
    2: find the even value terms
    3: return the sum of them

    'The Recursive approach'

*/

function fibonacci(n) {
  /**
   * Calculates the nth term in the Fibonacci sequence.
   *
   * @param {number} n - The position of the term to calculate.
   * @returns {number} - The value of the nth term in the Fibonacci sequence.
   */
  if (n <= 2) return n;
  return fibonacci(n - 1) + fibonacci(n - 2);
}

function sumOfEvenTerms(limit) {
  /**
   * Calculates the sum of even terms in the Fibonacci sequence up to a given limit.
   *
   * @param {number} limit - The upper limit for the Fibonacci terms.
   * @returns {number} - The sum of even terms in the Fibonacci sequence.
   */
  let sum = 0;
  let n = 0;
  let term;
  while (true) {
    if (term > limit) break;
    term = fibonacci(n);
    if (term % 2 === 0) sum += term;
    n += 1;
  }
  return sum;
}

const limit = 4 * 10 ** 6;
console.log(sumOfEvenTerms(limit));
